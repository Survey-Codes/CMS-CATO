# Generated by Django 2.2.3 on 2021-04-10 04:26

import ckeditor.fields
import colorfield.fields
from django.conf import settings
import django.contrib.postgres.fields.jsonb
import django.core.serializers.json
from django.db import migrations, models
import django.db.models.deletion
import mptt.fields


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('tools', '0001_initial'),
        ('menus', '0001_initial'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='GeneralData',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('creation_date', models.DateTimeField(auto_now_add=True, null=True, verbose_name='Creation date')),
                ('update_date', models.DateTimeField(auto_now=True, verbose_name='Updated')),
                ('active', models.BooleanField(default=True, verbose_name='Active')),
                ('logo', models.ImageField(blank=True, upload_to='contents/site/logo', verbose_name='Site logo')),
                ('created_by', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='generaldata_created_by_set', to=settings.AUTH_USER_MODEL, verbose_name='Created by')),
                ('updated_by', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='generaldata_updated_by_set', to=settings.AUTH_USER_MODEL, verbose_name='Updated by')),
            ],
            options={
                'verbose_name': 'General data',
                'verbose_name_plural': 'General data',
                'ordering': ['-active', 'creation_date'],
            },
        ),
        migrations.CreateModel(
            name='Page',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('creation_date', models.DateTimeField(auto_now_add=True, null=True, verbose_name='Creation date')),
                ('update_date', models.DateTimeField(auto_now=True, verbose_name='Updated')),
                ('active', models.BooleanField(default=True, verbose_name='Active')),
                ('title', models.CharField(max_length=20, unique=True, verbose_name='Page title')),
                ('order', models.PositiveSmallIntegerField(default=0)),
                ('slug', models.SlugField(default='-', verbose_name='Page slug')),
                ('lft', models.PositiveIntegerField(editable=False)),
                ('rght', models.PositiveIntegerField(editable=False)),
                ('tree_id', models.PositiveIntegerField(db_index=True, editable=False)),
                ('level', models.PositiveIntegerField(editable=False)),
                ('created_by', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='page_created_by_set', to=settings.AUTH_USER_MODEL, verbose_name='Created by')),
                ('inner_menu', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='menus.Menu', verbose_name='Page main menu')),
                ('parent', mptt.fields.TreeForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='contents.Page', verbose_name='Page parent')),
                ('updated_by', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='page_updated_by_set', to=settings.AUTH_USER_MODEL, verbose_name='Updated by')),
            ],
            options={
                'verbose_name': 'Page',
                'verbose_name_plural': 'Pages',
            },
        ),
        migrations.CreateModel(
            name='Post',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('creation_date', models.DateTimeField(auto_now_add=True, null=True, verbose_name='Creation date')),
                ('update_date', models.DateTimeField(auto_now=True, verbose_name='Updated')),
                ('active', models.BooleanField(default=True, verbose_name='Active')),
                ('title', models.CharField(default='', max_length=50, verbose_name='Post title')),
                ('logo', models.ImageField(blank=True, upload_to='contents/posts/logos', verbose_name='Post logo')),
                ('icon', models.ImageField(blank=True, upload_to='contents/posts/icons', verbose_name='Post icon')),
                ('link', models.CharField(blank=True, max_length=255, verbose_name='Post link')),
                ('slug', models.SlugField(default='-', verbose_name='Post slug')),
                ('lft', models.PositiveIntegerField(editable=False)),
                ('rght', models.PositiveIntegerField(editable=False)),
                ('tree_id', models.PositiveIntegerField(db_index=True, editable=False)),
                ('level', models.PositiveIntegerField(editable=False)),
                ('created_by', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='post_created_by_set', to=settings.AUTH_USER_MODEL, verbose_name='Created by')),
                ('parent', mptt.fields.TreeForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='contents.Post', verbose_name='Post parent')),
            ],
        ),
        migrations.CreateModel(
            name='Section',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('creation_date', models.DateTimeField(auto_now_add=True, null=True, verbose_name='Creation date')),
                ('update_date', models.DateTimeField(auto_now=True, verbose_name='Updated')),
                ('active', models.BooleanField(default=True, verbose_name='Active')),
                ('title', models.CharField(max_length=100, unique=True, verbose_name='Section title')),
                ('background', models.ImageField(blank=True, upload_to='contents/sections/backgrounds', verbose_name='Section background image')),
                ('background_color', colorfield.fields.ColorField(default='#FFFFFF', max_length=18, verbose_name='Section background color')),
                ('slug', models.SlugField(default='-', verbose_name='Section slug')),
                ('order', models.PositiveSmallIntegerField(default=0)),
                ('align', models.CharField(choices=[('RIGHT', 'Right'), ('LEFT', 'Left'), ('RIGHT_LEFT', 'Right - left'), ('LEFT_RIGHT', 'left - right')], default='RIGHT', max_length=20, verbose_name='Posts texts alignment')),
                ('created_by', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='section_created_by_set', to=settings.AUTH_USER_MODEL, verbose_name='Created by')),
            ],
            options={
                'verbose_name': 'Section',
                'verbose_name_plural': 'Sections',
                'ordering': ['order'],
            },
        ),
        migrations.CreateModel(
            name='SectionTemplate',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=50, verbose_name='Template name')),
                ('nickname', models.CharField(blank=True, max_length=20, verbose_name='Template nickname')),
                ('preview', models.ImageField(blank=True, upload_to='contents/sections/templates', verbose_name='Template preview')),
            ],
            options={
                'verbose_name': 'Section template',
                'verbose_name_plural': 'Section templates',
                'unique_together': {('name', 'nickname')},
            },
        ),
        migrations.CreateModel(
            name='SectionSelector',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('creation_date', models.DateTimeField(auto_now_add=True, null=True, verbose_name='Creation date')),
                ('update_date', models.DateTimeField(auto_now=True, verbose_name='Updated')),
                ('active', models.BooleanField(default=True, verbose_name='Active')),
                ('order', models.PositiveSmallIntegerField(default=0)),
                ('created_by', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='sectionselector_created_by_set', to=settings.AUTH_USER_MODEL, verbose_name='Created by')),
                ('page', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='contents.Page')),
                ('section', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='contents.Section')),
                ('updated_by', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='sectionselector_updated_by_set', to=settings.AUTH_USER_MODEL, verbose_name='Updated by')),
            ],
            options={
                'verbose_name': 'Select section',
                'verbose_name_plural': 'Select sections',
                'ordering': ['order'],
            },
        ),
        migrations.AddField(
            model_name='section',
            name='pages',
            field=models.ManyToManyField(through='contents.SectionSelector', to='contents.Page'),
        ),
        migrations.AddField(
            model_name='section',
            name='template',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='contents.SectionTemplate', verbose_name='Section template'),
        ),
        migrations.AddField(
            model_name='section',
            name='updated_by',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='section_updated_by_set', to=settings.AUTH_USER_MODEL, verbose_name='Updated by'),
        ),
        migrations.CreateModel(
            name='PostSettings',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('show_family', models.BooleanField(default=False, help_text="Check the box if you want the post's family to shown in the section", verbose_name='Show family')),
                ('order', models.PositiveSmallIntegerField(default=0)),
                ('post', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='contents.Post')),
                ('section', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='contents.Section')),
            ],
            options={
                'verbose_name': 'Post settings',
                'verbose_name_plural': 'Order posts',
                'ordering': ['order'],
            },
        ),
        migrations.CreateModel(
            name='PostGallery',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('creation_date', models.DateTimeField(auto_now_add=True, null=True, verbose_name='Creation date')),
                ('update_date', models.DateTimeField(auto_now=True, verbose_name='Updated')),
                ('active', models.BooleanField(default=True, verbose_name='Active')),
                ('title', models.CharField(max_length=100, verbose_name='Post gallery name')),
                ('image', models.ImageField(blank=True, upload_to='contents/posts/galleries/panorama', verbose_name='Load image')),
                ('is_360', models.BooleanField(default=False, help_text='Check the box if is a 360 image', verbose_name='Is it a 360 image?')),
                ('youtube_url', models.CharField(blank=True, max_length=255, verbose_name='Youtube video url')),
                ('order', models.SmallIntegerField(default=0)),
                ('created_by', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='postgallery_created_by_set', to=settings.AUTH_USER_MODEL, verbose_name='Created by')),
                ('post', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='contents.Post', verbose_name='Post')),
                ('updated_by', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='postgallery_updated_by_set', to=settings.AUTH_USER_MODEL, verbose_name='Updated by')),
            ],
            options={
                'verbose_name': 'Image',
                'verbose_name_plural': 'Images',
                'ordering': ['order'],
            },
        ),
        migrations.AddField(
            model_name='post',
            name='sections',
            field=models.ManyToManyField(through='contents.PostSettings', to='contents.Section'),
        ),
        migrations.AddField(
            model_name='post',
            name='updated_by',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='post_updated_by_set', to=settings.AUTH_USER_MODEL, verbose_name='Updated by'),
        ),
        migrations.CreateModel(
            name='SectionLanguage',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=100, verbose_name='Section title')),
                ('description', ckeditor.fields.RichTextField(blank=True, null=True, verbose_name='Section description')),
                ('metadata', django.contrib.postgres.fields.jsonb.JSONField(blank=True, default=dict, editable=False, encoder=django.core.serializers.json.DjangoJSONEncoder)),
                ('language', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='tools.Language', verbose_name='Languages')),
                ('section', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='translations', to='contents.Section')),
            ],
            options={
                'verbose_name': 'Section language',
                'verbose_name_plural': 'Section languages',
                'unique_together': {('language', 'section')},
            },
        ),
        migrations.CreateModel(
            name='PostLanguage',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(default='', max_length=50, verbose_name='Post title')),
                ('description', ckeditor.fields.RichTextField(blank=True, verbose_name='Post description')),
                ('metadata', django.contrib.postgres.fields.jsonb.JSONField(blank=True, default=dict, editable=False, encoder=django.core.serializers.json.DjangoJSONEncoder)),
                ('language', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='tools.Language', verbose_name='Languages')),
                ('post', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='translations', to='contents.Post')),
            ],
            options={
                'verbose_name': 'Post language',
                'verbose_name_plural': 'Post languages',
                'ordering': ['post'],
                'unique_together': {('language', 'post')},
            },
        ),
        migrations.CreateModel(
            name='PageLanguage',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=20, verbose_name='Page title')),
                ('description', ckeditor.fields.RichTextField(blank=True, null=True, verbose_name='Page description')),
                ('metadata', django.contrib.postgres.fields.jsonb.JSONField(blank=True, default=dict, editable=False, encoder=django.core.serializers.json.DjangoJSONEncoder)),
                ('language', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='tools.Language', verbose_name='Languages')),
                ('page', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='translations', to='contents.Page')),
            ],
            options={
                'verbose_name': 'Page language',
                'verbose_name_plural': 'Page languages',
                'unique_together': {('language', 'page')},
            },
        ),
        migrations.CreateModel(
            name='GeneralDataLanguage',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('footer', ckeditor.fields.RichTextField(blank=True, verbose_name='Footer')),
                ('metadata', django.contrib.postgres.fields.jsonb.JSONField(blank=True, default=dict, editable=False, encoder=django.core.serializers.json.DjangoJSONEncoder)),
                ('general_data', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='translations', to='contents.GeneralData')),
                ('language', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='tools.Language', verbose_name='Languages')),
                ('main_menu', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='menus.Menu', verbose_name='Main menu')),
            ],
            options={
                'verbose_name': 'General data language',
                'verbose_name_plural': 'General data languages',
                'unique_together': {('language', 'general_data')},
            },
        ),
    ]
