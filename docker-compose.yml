version: '3.1'

services:
  web:
    build: .
    image: catocms:latest
    container_name: catocms-backend
    environment:
      ENVIRONMENT: development
    depends_on:
      - db
      - broker
    volumes:
      - .:/src
      - ./scripts:/scripts
    # Dev user: admin pass: admin
    command: ["/scripts/wait-for-it.sh", "db:5432", "--", "/scripts/command-dev.sh"]
    ports:
      - "8010:8000"

  broker:
    image: rabbitmq:latest
    container_name: catocms-broker
    restart: "no"
    environment:
      RABBITMQ_DEFAULT_USER: catocms
      RABBITMQ_DEFAULT_PASS: catocms
    ports:
      - "5672:5672"

  celery:
    image: catocms:latest
    container_name: catocms-celery
    restart: always
    command:
      [
        "celery",
        "--app=projectCato",
        "--concurrency=8",
        "--hostname=worker1@%h",
        "--loglevel=INFO",
        "--queues=celery",
        "worker",
      ]
    depends_on:
      - web
      - broker

  flower:
    image: catocms:latest
    container_name: catocms-flower
    restart: always
    command:
      [
        "celery",
        "--app=projectCato",
        "--concurrency=8",
        "--db=/src/flowerdb",
        "--persistent",
        "--port=5555",
        "flower",
      ]
    depends_on:
      - broker
      - web
    ports:
      - "5555:5555"

  beat:
    image: catocms:latest
    container_name: catocms-beat
    restart: always
    command:
      [
        "celery",
        "--app=projectCato",
        "--loglevel=INFO",
        "--pidfile=/src/tmp/beat.pid",
        "beat",
      ]
    depends_on:
      - broker
      - web

  db:
    image: postgis/postgis:12-3.0
    container_name: catocms-postgis
    environment: 
      POSTGRES_PASSWORD: postgres
    ports:
      - "50000:5432"
